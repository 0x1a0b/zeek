##! The BIFs that define the Zeek supervisor control interface.

%%{
#include "Supervisor.h"
%%}

module Supervisor;

enum ClusterRole %{
	NONE,
	LOGGER,
	MANAGER,
	PROXY,
	WORKER,
%}

type Supervisor::ClusterEndpoint: record;
type Supervisor::Status: record;
type Supervisor::Node: record;

function Supervisor::__status%(nodes: string%): Supervisor::Status
	%{
	if ( ! zeek::supervisor )
		{
		builtin_error("supervisor mode not enabled");
		return new RecordVal(BifType::Record::Supervisor::Status);
		}

	return zeek::supervisor->Status(nodes->CheckString());
	%}

function Supervisor::__create%(node: Supervisor::Node%): string
	%{
	if ( ! zeek::supervisor )
		{
		builtin_error("supervisor mode not enabled");
		return new StringVal("supervisor mode not enabled");
		}

	auto rval = zeek::supervisor->Create(node->AsRecordVal());
	return new StringVal(rval);
	%}

function Supervisor::__destroy%(nodes: string%): bool
	%{
	if ( ! zeek::supervisor )
		{
		builtin_error("supervisor mode not enabled");
		return val_mgr->GetBool(false);
		}

	auto rval = zeek::supervisor->Destroy(nodes->CheckString());
	return val_mgr->GetBool(rval);
	%}

function Supervisor::__restart%(nodes: string%): bool
	%{
	if ( ! zeek::supervisor )
		{
		builtin_error("supervisor mode not enabled");
		return val_mgr->GetBool(false);
		}

	auto rval = zeek::supervisor->Restart(nodes->CheckString());
	return val_mgr->GetBool(rval);
	%}

function Supervisor::__init_cluster%(%): bool
	%{
	if ( zeek::supervised_node && ! zeek::supervised_node->cluster.empty() )
		{
		zeek::supervised_node->InitCluster();
		return val_mgr->GetBool(true);
		}

	return val_mgr->GetBool(false);
	%}

function Supervisor::__is_supervised%(%): bool
	%{
	return val_mgr->GetBool(zeek::supervised_node != nullptr);
	%}
