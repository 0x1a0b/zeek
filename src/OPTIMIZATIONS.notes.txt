optimize for common case of global that's a function/event name

use usedef's to only restore globals that matter after a call

versions of operators that take listval's that inline the values
	rather than building val-vec's if a small number (including 0)

single val-vec maximally sized

don't consider modifying a global's element as a reaching-def for
	the global itself (glb[5] = 3)

when flushing globals, no need to do so if they've already been flushed
	(but may be tricky to be sure that code path reaches location)
	and their reaching-defs haven't changed

don't bother loading unused function parameters

don't sync variables to the frame if they haven't changed since the
	last time they were sync'd to the frame (or since we loaded
	them initially, if parameters)

collapse go-to's that branch to go-to's

could explicitly support +=/-= for integral types
