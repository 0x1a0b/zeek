# The parser generated by BinPAC needs to handle this pcap
# without crashing/asserting.  Specifically, parsing Function Code 23
# (ReadWriteMultipleRegistersRequest) has a field:
#
#     uint16[write_quantity] &length=write_byte_count;
#
# A single bounds check gets generated for the &length field, though if
# that length is actually less than total data left in the buffer,
# it will loop through trying to satisfy the actual write_quantity, which
# may be different and cause the pointer value used in the loop to exceed
# the end of the buffer.  So looping over each element itself warrants it's
# own exception-throwing-bounds-check that BinPAC now has instead of
# asserting that the pointer is always within the bounds of the data buffer.

# @TEST-EXEC: bro -r $TRACES/modbus/4SICS-GeekLounge-151022-min.pcap
# @TEST-EXEC: btest-diff weird.log
