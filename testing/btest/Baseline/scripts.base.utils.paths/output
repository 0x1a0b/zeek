test basename()
===============================
Given : windows\System32\LogFiles\Firewall\Domainfirewall.log
Expect: Domainfirewall.log
Result: Domainfirewall.log
Result: SUCCESS
===============================
Given : a\b\ file with embedded spaces.txt
Expect:  file with embedded spaces.txt
Result:  file with embedded spaces.txt
Result: SUCCESS
===============================
Given : a b c\ path \and file with embedded spaces.txt
Expect: and file with embedded spaces.txt
Result: and file with embedded spaces.txt
Result: SUCCESS
===============================
Given : nopath.txt
Expect: nopath.txt
Result: nopath.txt
Result: SUCCESS
===============================
Given : a\b\\x01\x02filewithbinarycharacters.txt
Expect: \x01\x02filewithbinarycharacters.txt
Result: \x01\x02filewithbinarycharacters.txt
Result: SUCCESS
===============================
test dirname()
===============================
Given : windows\System32\LogFiles\Firewall\Domainfirewall.log
Expect: windows\System32\LogFiles\Firewall
Result: windows\System32\LogFiles\Firewall
Result: SUCCESS
===============================
Given : a\b\ file with embedded spaces.txt
Expect: a\b
Result: a\b
Result: SUCCESS
===============================
Given : a b c\ path \and file with embedded spaces.txt
Expect: a b c\ path 
Result: a b c\ path 
Result: SUCCESS
===============================
Given : nopath.txt
Expect: 
Result: 
Result: SUCCESS
===============================
Given : a\b\\x01\x02filewithbinarycharacters.txt
Expect: a\b
Result: a\b
Result: SUCCESS
===============================
test compress_path()
===============================
Given : foo//bar
Expect: foo/bar
Result: foo/bar
Result: SUCCESS
===============================
Given : foo//bar/..
Expect: foo
Result: foo
Result: SUCCESS
===============================
Given : foo/bar/../..
Expect: 
Result: 
Result: SUCCESS
===============================
Given : foo//bar/../..
Expect: 
Result: 
Result: SUCCESS
===============================
Given : /foo/../bar
Expect: /bar
Result: /bar
Result: SUCCESS
===============================
Given : /foo/../bar/..
Expect: /
Result: /
Result: SUCCESS
===============================
Given : /foo/baz/../..
Expect: /
Result: /
Result: SUCCESS
===============================
Given : ../..
Expect: ../..
Result: ../..
Result: SUCCESS
===============================
Given : foo/../../..
Expect: ../..
Result: ../..
Result: SUCCESS
===============================
test extract_path()
===============================
Given : "/this/is/a/dir" is current directory
Expect: /this/is/a/dir
Result: /this/is/a/dir
Result: SUCCESS
===============================
Given : /this/is/a/dir is current directory
Expect: /this/is/a/dir
Result: /this/is/a/dir
Result: SUCCESS
===============================
Given : /this/is/a/dir\ is\ current\ directory
Expect: /this/is/a/dir\ is\ current\ directory
Result: /this/is/a/dir\ is\ current\ directory
Result: SUCCESS
===============================
Given : hey, /foo/bar/baz.bro is a cool script
Expect: /foo/bar/baz.bro
Result: /foo/bar/baz.bro
Result: SUCCESS
===============================
Given : here's two dirs: /foo/bar and /foo/baz
Expect: /foo/bar
Result: /foo/bar
Result: SUCCESS
===============================
test build_path_compressed()
===============================
/home/bro/policy/somefile.bro
/usr/local/bro/share/bro/somefile.bro
/usr/local/bro/somefile.bro
===============================
test build_full_path()
===============================
/home/bro//policy/somefile.bro
/usr/local/bro/share/bro/somefile.bro
